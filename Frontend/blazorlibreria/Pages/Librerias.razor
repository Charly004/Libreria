@page "/Libreria"
@inject ILibreriaService LibreriaService;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Dosis:wght@300&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Dosis:wght@300&family=Shadows+Into+Light&display=swap"
    rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poiret+One&display=swap" rel="stylesheet">

<PageTitle>Libreria</PageTitle>

<div class="Titulo">
    <ModuleTitle title="Libreria El Pollo Lector" />
</div>
<br>
<button class="btn btn-dark" @onclick="@(()=> NavigationManager.NavigateTo("/AgregarLibro"))">Agregar Libro</button>
<br><br>
<style>
    .libreria-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, 280px);
        grid-auto-rows: auto;
        grid-gap: 1rem;
        font-family: 'Dosis', sans-serif;
    }
</style>

<style>
    .Titulo {
        font-family: 'Poiret One', cursive;
    }
</style>

@if (librerias?.Count > 0)
{
    <div class="libreria-container">

        @foreach (var libreria in librerias)
        {
            <div class="card">
                <img class="card-img-top" src="@libreria.Imagen" alt="Libreria" loading="lazy" width="250" height="315">
                <div class="card-body">
                    <h3>@libreria.CodigoLibro</h3>
                    <h3>@libreria.Titulo</h3>
                    <h5>@libreria.Categoria</h5>
                    <h5>@libreria.Autor</h5>
                    <h5>@libreria.Editorial</h5>
                    <button title="Eliminar" class="btn btn-danger btn-delete" @onclick="@(()=> DeleteLibros(libreria))"><span class="oi oi-trash"></span></button>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No hay libros para mostrar</p>
}

@code
{
    private List<Libreria>? librerias;

    protected override async Task OnInitializedAsync()
    {
        await GetLibreria();
    }

    private async Task GetLibreria()
    {
        librerias =  await LibreriaService.Get();
    }

    private async Task DeleteLibros(Libreria libreria)
    {
        if(! await JSRuntime.InvokeAsync<bool>("confirm",$"Estas Seguro Que Quieres Eliminar {libreria.Titulo}"))
            return;
        await LibreriaService.Delete(libreria.CodigoLibro);

        await GetLibreria();
    }

}